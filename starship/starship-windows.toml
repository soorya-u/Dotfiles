# ~/.config/starship.toml

add_newline = true
command_timeout = 1000
format = """
[‚ï≠‚ï¥](238)$os$directory$git_branch$git_status$python$nodejs
[‚ï∞‚îÄ](238)$character"""

# format = """$os$username$hostname$kubernetes$directory$git_branch$git_status"""

# Drop ugly default prompt characters
[character]
success_symbol = '[‚ùØ](12)'
error_symbol = '[‚ùØ](12)'

# ---

[os]
format = '[$symbol](12) '
disabled = false

[os.symbols]
Windows = 'Óò™'
Arch = 'Û∞£á'
Ubuntu = 'Ôåõ'
Macos = 'Û∞Äµ'

# ---

# Shows the username

[username]
style_user = '153 bold'
style_root = 'black bold'
format = '[$user]($style)'
disabled = false
show_always = true

# Shows the hostname

[hostname]
ssh_only = false
format = '[$hostname](bold 153)'
disabled = false

# Shows current directory

[directory]
truncation_length = 1
truncation_symbol = ' ÔÑï  ‚Ä¶/'
home_symbol = ' Û∞ãú  ~'
read_only_style = '196'
read_only = ' ÔÄ£ '
format = '[$path](bold 153)[$read_only]($read_only_style) '

# Shows current git branch

[git_branch]
symbol = 'ÔÑì  ÔÑ¶ '
format = 'on [${symbol}(${branch})]($style)'
# truncation_length = 4
truncation_symbol = ' ‚Ä¶/'
style = 'green'

# Shows current git status

[git_status]
format = '[$all_status$ahead_behind]($style) '
style = 'bold green'
conflicted = ' üè≥'
up_to_date = ''
untracked = ' Ôî© '
ahead = ' ‚á°${count}'
diverged = ' ‚áï‚á°${ahead_count}‚á£${behind_count}'
behind = ' ‚á£${count}'
stashed = ' Ô£ñ '
modified = ' ÔÅÑ '
staged = ' [++\($count\)](green)'
renamed = ' Ë•Å '
deleted = ' ÔÄî '

# Shows kubernetes context and namespace
[kubernetes]
format = 'via [Û±Éæ $context\($namespace\)](bold purple) '
disabled = false

# ---

[c]
format = '[\[$symbol($version(-$name))\]]($style)'
version_format = 'v${major}.${minor}'
symbol = 'Óòû '
detect_extensions = ['c', 'h']
commands = [['cc', '--version'], ['gcc', '--version'], ['clang', '--version']]
style = '12'
disabled = false

[golang]
format = '[\[$symbol($version)\]]($style)'
version_format = 'v${major}.${minor}'
symbol = 'Óôû '
detect_extensions = ['go']
detect_files = [
  'go.mod',
  'go.sum',
  'go.work',
  'glide.yaml',
  'Gopkg.yml',
  'Gopkg.lock',
  '.go-version',
]
detect_folders = ['Godeps']
style = '39'
not_capable_style = 'bold red'
disabled = false

[java]
format = '[\[$symbol($version)\]]($style)'
version_format = 'v${major}.${minor}'
detect_extensions = ['java', 'class', 'gradle', 'jar', 'cljs', 'cljc']
detect_files = [
  'pom.xml',
  'build.gradle.kts',
  'build.sbt',
  '.java-version',
  'deps.edn',
  'project.clj',
  'build.boot',
  '.sdkmanrc',
]
detect_folders = []
symbol = 'Óâñ '
style = '160'
disabled = false

[nodejs]
format = '[\[$symbol($version)\]]($style)'
version_format = 'v${major}.${minor}'
symbol = 'Óúò '
detect_extensions = ['js', 'mjs', 'cjs', 'ts', 'mts', 'cts']
detect_files = ['package.json', '.node-version']
detect_folders = ['node_modules']
style = '34'
disabled = false

[php]
format = '[\[$symbol($version)\]]($style)'
version_format = 'v${major}.${minor}'
symbol = 'Û∞åü '
detect_extensions = ['php']
detect_files = ['composer.json', '.php-version']
detect_folders = []
style = '68'
disabled = false

[python]
format = '[\[$symbol($pyenv_prefix-$version)\]]($style)'
version_format = 'v${major}.${minor}'
symbol = "Û∞å† "
style = '184'
detect_extensions = ['py']
pyenv_version_name = true
python_binary = ['python', 'python3']
pyenv_prefix = 'env'
detect_files = ['__init__.py', 'requirements.txt']
disabled = false

[rust]
format = '[\[$symbol($version)\]]($style)'
version_format = 'v${major}.${minor}'
symbol = 'Óöã '
detect_extensions = ['rs']
detect_files = ['Cargo.toml']
detect_folders = []
style = '202'
disabled = false

[zig]
format = '[\[$symbol($version)\]]($style)'
version_format = 'v${major}.${minor}'
symbol = 'Óö© '
detect_extensions = ['zig']
detect_files = ['Cargo.toml']
detect_folders = []
style = '214'
disabled = false
